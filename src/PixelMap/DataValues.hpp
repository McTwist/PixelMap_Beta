

#pragma once
#ifndef DATAVALUES_HPP

#include "Globals.hpp"

#include "Color.hpp"

//#define DATAVALUES_AMOUNT 256

// Defined
enum DataValues_List
{
	AIR = 0,
	STONE,
	GRASS,
	DIRT,
	COBBLESTONE,
	WOOD,
	SAPLING,
	BEDROCK,
	WATER,
	STATIONARYWATER,
	LAVA,
	STATIONARYLAVA,
	SAND,
	GRAVEL,
	GOLDORE,
	IRONORE,
	COALORE,
	LOG,
	LEAVES,
	SPONGE,
	GLASS,
	LAPIZLAZULIORE,
	LAPIZLAZULIBLOCK,
	DISPENSER,
	SANDSTONE,
	NOTEBLOCK,
	BED,
	WOOL = 35,
	YELLOWFLOWER = 37,
	REDROSE,
	BROWNMUSHROOM,
	REDMUSHROOM,
	GOLDBLOCK,
	IRONBLOCK,
	DOUBLESLAB_STONE,
	SLAB_STONE,
	BRICK,
	TNT,
	BOOKSHELF,
	MOSSYCOBBLESTONE,
	OBSIDIAN,
	TORCH,
	FIRE,
	MOBSPAWNER,
	WOODENSTAIRS,
	CHEST,
	REDSTONEWIRE,
	DIAMONDORE,
	DIAMONDBLOCK,
	WORKBENCH,
	CROPS,
	SOIL,
	FURNACE,
	BURNINGFURNACE,
	SIGNPOST,
	WOODENDOOR,
	LADDER,
	MINECARTTRACK,
	COBBLESTONESTAIRS,
	WALLSIGN,
	LEVER,
	STONEPRESSUREPLATE,
	IRONDOOR,
	WOODPRESSUREPLATE,
	REDSTONEORE,
	GLOWINGREDSTONEORE,
	REDSTONETORCHON,
	REDSTONETORCHOFF,
	STONEBUTTON,
	SNOW,
	ICE,
	SNOWBLOCK,
	CACTUS,
	CLAY,
	REED,
	JUKEBOX,
	FENCE,
	PUMPKIN,
	BLOODSTONE,
	SLOWSAND,
	LIGHTSTONE,
	PORTAL,
	JACKOLANTERN,
	CAKE,
	REPEATEROFF,
	REPEATERON,

	BLOCKAMOUNT,

	WOOLCOLOR = BLOCKAMOUNT,
	WOOLWHITE = WOOLCOLOR,
	WOOLORANGE,
	WOOLMAGENTA,
	WOOLLIGHTBLUE,
	WOOLYELLOW,
	WOOLLIMEGREEN,
	WOOLPINK,
	WOOLGRAY,
	WOOLLIGHTGRAY,
	WOOLCYAN,
	WOOLBLUE,
	WOOLBROWN,
	WOOLGREEN,
	WOOLRED,
	WOOLBLACK,
	WOOLPURPLE,
	WOOLUNKNOWN,

	LOGCOLOR,
	LOGNORMAL = LOGCOLOR,
	LOGREDWOOD,
	LOGBIRCH,

	LEAFCOLOR,
	LEAFNORMAL = LEAFCOLOR,
	LEAFREDWOOD,
	LEAFBIRCH,

	SLABCOLOR,
	SLABSTONE = SLABCOLOR,
	SLABSAND,
	SLABWOOD,
	SLABCOBBLE,

	DATAVALUES_MAX_AMOUNT,
	DATAVALUES_AMOUNT = 256 + (DATAVALUES_MAX_AMOUNT - BLOCKAMOUNT)
};

class DataValues
{
public:
	static void MakeColor();
	static void MakeColor(STRING file);

	static Color GetColor(unsigned char c);

private:
	static Color colorData[DATAVALUES_AMOUNT];
};

#endif // DATAVALUES_HPP